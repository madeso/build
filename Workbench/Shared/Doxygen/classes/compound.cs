//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace Workbench.Shared.Doxygen.Compound {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("doxygen", Namespace="", IsNullable=false)]
    public partial class DoxygenType {
        
        private compounddefType[] compounddefField;
        
        private string versionField;
        
        private string langField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compounddef", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compounddefType[] compounddef {
            get {
                return this.compounddefField;
            }
            set {
                this.compounddefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
        public string lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class compounddefType {
        
        private string compoundnameField;
        
        private string titleField;
        
        private compoundRefType[] basecompoundrefField;
        
        private compoundRefType[] derivedcompoundrefField;
        
        private incType[] includesField;
        
        private incType[] includedbyField;
        
        private nodeType[] incdepgraphField;
        
        private nodeType[] invincdepgraphField;
        
        private refType[] innermoduleField;
        
        private refType[] innerdirField;
        
        private refType[] innerfileField;
        
        private refType[] innerclassField;
        
        private refType[] innerconceptField;
        
        private refType[] innernamespaceField;
        
        private refType[] innerpageField;
        
        private refType[] innergroupField;
        
        private string[] qualifierField;
        
        private paramType[] templateparamlistField;
        
        private sectiondefType[] sectiondefField;
        
        private tableofcontentsType tableofcontentsField;
        
        private linkedTextType requiresclauseField;
        
        private linkedTextType initializerField;
        
        private descriptionType briefdescriptionField;
        
        private descriptionType detaileddescriptionField;
        
        private exportType[] exportsField;
        
        private nodeType[] inheritancegraphField;
        
        private nodeType[] collaborationgraphField;
        
        private listingType programlistingField;
        
        private locationType locationField;
        
        private memberRefType[] listofallmembersField;
        
        private string idField;
        
        private DoxCompoundKind kindField;
        
        private bool kindFieldSpecified;
        
        private DoxLanguage languageField;
        
        private bool languageFieldSpecified;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        private DoxBool finalField;
        
        private bool finalFieldSpecified;
        
        private DoxBool inlineField;
        
        private bool inlineFieldSpecified;
        
        private DoxBool sealedField;
        
        private bool sealedFieldSpecified;
        
        private DoxBool abstractField;
        
        private bool abstractFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string compoundname {
            get {
                return this.compoundnameField;
            }
            set {
                this.compoundnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("basecompoundref", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compoundRefType[] basecompoundref {
            get {
                return this.basecompoundrefField;
            }
            set {
                this.basecompoundrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("derivedcompoundref", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compoundRefType[] derivedcompoundref {
            get {
                return this.derivedcompoundrefField;
            }
            set {
                this.derivedcompoundrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("includes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public incType[] includes {
            get {
                return this.includesField;
            }
            set {
                this.includesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("includedby", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public incType[] includedby {
            get {
                return this.includedbyField;
            }
            set {
                this.includedbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("node", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public nodeType[] incdepgraph {
            get {
                return this.incdepgraphField;
            }
            set {
                this.incdepgraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("node", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public nodeType[] invincdepgraph {
            get {
                return this.invincdepgraphField;
            }
            set {
                this.invincdepgraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innermodule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innermodule {
            get {
                return this.innermoduleField;
            }
            set {
                this.innermoduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerdir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innerdir {
            get {
                return this.innerdirField;
            }
            set {
                this.innerdirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerfile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innerfile {
            get {
                return this.innerfileField;
            }
            set {
                this.innerfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerclass", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innerclass {
            get {
                return this.innerclassField;
            }
            set {
                this.innerclassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerconcept", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innerconcept {
            get {
                return this.innerconceptField;
            }
            set {
                this.innerconceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innernamespace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innernamespace {
            get {
                return this.innernamespaceField;
            }
            set {
                this.innernamespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerpage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innerpage {
            get {
                return this.innerpageField;
            }
            set {
                this.innerpageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innergroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refType[] innergroup {
            get {
                return this.innergroupField;
            }
            set {
                this.innergroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("qualifier", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public paramType[] templateparamlist {
            get {
                return this.templateparamlistField;
            }
            set {
                this.templateparamlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sectiondef", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sectiondefType[] sectiondef {
            get {
                return this.sectiondefField;
            }
            set {
                this.sectiondefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tableofcontentsType tableofcontents {
            get {
                return this.tableofcontentsField;
            }
            set {
                this.tableofcontentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType requiresclause {
            get {
                return this.requiresclauseField;
            }
            set {
                this.requiresclauseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType initializer {
            get {
                return this.initializerField;
            }
            set {
                this.initializerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType briefdescription {
            get {
                return this.briefdescriptionField;
            }
            set {
                this.briefdescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType detaileddescription {
            get {
                return this.detaileddescriptionField;
            }
            set {
                this.detaileddescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("export", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public exportType[] exports {
            get {
                return this.exportsField;
            }
            set {
                this.exportsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("node", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public nodeType[] inheritancegraph {
            get {
                return this.inheritancegraphField;
            }
            set {
                this.inheritancegraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("node", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public nodeType[] collaborationgraph {
            get {
                return this.collaborationgraphField;
            }
            set {
                this.collaborationgraphField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public listingType programlisting {
            get {
                return this.programlistingField;
            }
            set {
                this.programlistingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public locationType location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public memberRefType[] listofallmembers {
            get {
                return this.listofallmembersField;
            }
            set {
                this.listofallmembersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxCompoundKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxLanguage language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool languageSpecified {
            get {
                return this.languageFieldSpecified;
            }
            set {
                this.languageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool final {
            get {
                return this.finalField;
            }
            set {
                this.finalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool finalSpecified {
            get {
                return this.finalFieldSpecified;
            }
            set {
                this.finalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool inline {
            get {
                return this.inlineField;
            }
            set {
                this.inlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inlineSpecified {
            get {
                return this.inlineFieldSpecified;
            }
            set {
                this.inlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @sealed {
            get {
                return this.sealedField;
            }
            set {
                this.sealedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sealedSpecified {
            get {
                return this.sealedFieldSpecified;
            }
            set {
                this.sealedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @abstract {
            get {
                return this.abstractField;
            }
            set {
                this.abstractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool abstractSpecified {
            get {
                return this.abstractFieldSpecified;
            }
            set {
                this.abstractFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class compoundRefType {
        
        private string refidField;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        private DoxVirtualKind virtField;
        
        private bool virtFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxVirtualKind virt {
            get {
                return this.virtField;
            }
            set {
                this.virtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool virtSpecified {
            get {
                return this.virtFieldSpecified;
            }
            set {
                this.virtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxProtectionKind {
        
        /// <remarks/>
        @public,
        
        /// <remarks/>
        @protected,
        
        /// <remarks/>
        @private,
        
        /// <remarks/>
        package,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxVirtualKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-virtual")]
        nonvirtual,
        
        /// <remarks/>
        @virtual,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pure-virtual")]
        purevirtual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class memberRefType {
        
        private string scopeField;
        
        private string nameField;
        
        private string refidField;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        private DoxVirtualKind virtField;
        
        private bool virtFieldSpecified;
        
        private string ambiguityscopeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxVirtualKind virt {
            get {
                return this.virtField;
            }
            set {
                this.virtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool virtSpecified {
            get {
                return this.virtFieldSpecified;
            }
            set {
                this.virtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ambiguityscope {
            get {
                return this.ambiguityscopeField;
            }
            set {
                this.ambiguityscopeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportType {
        
        private string refidField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tableofcontentsKindType {
        
        private string nameField;
        
        private string referenceField;
        
        private tableofcontentsType[] tableofcontentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tableofcontents", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tableofcontentsType[] tableofcontents {
            get {
                return this.tableofcontentsField;
            }
            set {
                this.tableofcontentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tableofcontentsType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tableofcontents", typeof(tableofcontentsType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tocsect", typeof(tableofcontentsKindType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberType {
        
        private string nameField;
        
        private string refidField;
        
        private MemberKind kindField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MemberKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum MemberKind {
        
        /// <remarks/>
        define,
        
        /// <remarks/>
        property,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        variable,
        
        /// <remarks/>
        typedef,
        
        /// <remarks/>
        @enum,
        
        /// <remarks/>
        enumvalue,
        
        /// <remarks/>
        function,
        
        /// <remarks/>
        signal,
        
        /// <remarks/>
        prototype,
        
        /// <remarks/>
        friend,
        
        /// <remarks/>
        dcop,
        
        /// <remarks/>
        slot,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class referenceType {
        
        private string refidField;
        
        private string compoundrefField;
        
        private string startlineField;
        
        private string endlineField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string compoundref {
            get {
                return this.compoundrefField;
            }
            set {
                this.compoundrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string startline {
            get {
                return this.startlineField;
            }
            set {
                this.startlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string endline {
            get {
                return this.endlineField;
            }
            set {
                this.endlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class locationType {
        
        private string fileField;
        
        private string lineField;
        
        private string columnField;
        
        private string declfileField;
        
        private string decllineField;
        
        private string declcolumnField;
        
        private string bodyfileField;
        
        private string bodystartField;
        
        private string bodyendField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string file {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string declfile {
            get {
                return this.declfileField;
            }
            set {
                this.declfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string declline {
            get {
                return this.decllineField;
            }
            set {
                this.decllineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string declcolumn {
            get {
                return this.declcolumnField;
            }
            set {
                this.declcolumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string bodyfile {
            get {
                return this.bodyfileField;
            }
            set {
                this.bodyfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string bodystart {
            get {
                return this.bodystartField;
            }
            set {
                this.bodystartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string bodyend {
            get {
                return this.bodyendField;
            }
            set {
                this.bodyendField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumvalueType {
        
        private string nameField;
        
        private linkedTextType initializerField;
        
        private descriptionType briefdescriptionField;
        
        private descriptionType detaileddescriptionField;
        
        private string idField;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType initializer {
            get {
                return this.initializerField;
            }
            set {
                this.initializerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType briefdescription {
            get {
                return this.briefdescriptionField;
            }
            set {
                this.briefdescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType detaileddescription {
            get {
                return this.detaileddescriptionField;
            }
            set {
                this.detaileddescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class linkedTextType {
        
        private refTextType[] refField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ref", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refTextType[] @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refTextType {
        
        private string refidField;
        
        private DoxRefKind kindrefField;
        
        private bool kindrefFieldSpecified;
        
        private string externalField;
        
        private string tooltipField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxRefKind kindref {
            get {
                return this.kindrefField;
            }
            set {
                this.kindrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindrefSpecified {
            get {
                return this.kindrefFieldSpecified;
            }
            set {
                this.kindrefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tooltip {
            get {
                return this.tooltipField;
            }
            set {
                this.tooltipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxRefKind {
        
        /// <remarks/>
        compound,
        
        /// <remarks/>
        member,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class descriptionType {
        
        private string titleField;
        
        private docParaType[] paraField;
        
        private docInternalType[] internalField;
        
        private docSect1Type[] sect1Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docInternalType[] @internal {
            get {
                return this.internalField;
            }
            set {
                this.internalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect1Type[] sect1 {
            get {
                return this.sect1Field;
            }
            set {
                this.sect1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParaType {
        
        private object[] itemsField;
        
        private ItemsChoiceType12[] itemsElementNameField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("blockquote", typeof(docBlockQuoteType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copydoc", typeof(docCopyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("details", typeof(docDetailsType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diafile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dotfile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("heading", typeof(docHeadingType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hruler", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("indexentry", typeof(docIndexEntryType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("itemizedlist", typeof(docListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("javadoccode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("javadocliteral", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("language", typeof(docLanguageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mscfile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("orderedlist", typeof(docListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("parameterlist", typeof(docParamListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("parblock", typeof(docParBlockType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("preformatted", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("programlisting", typeof(listingType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(docSimpleSectType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("table", typeof(docTableType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(docTitleType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("toclist", typeof(docTocListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("variablelist", typeof(docVariableListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("verbatim", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xrefsect", typeof(docXRefSectType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType12[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docEmptyType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docAnchorType {
        
        private string idField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docBlockQuoteType {
        
        private docParaType[] paraField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docMarkupType {
        
        private object[] itemsField;
        
        private ItemsChoiceType10[] itemsElementNameField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("blockquote", typeof(docBlockQuoteType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copydoc", typeof(docCopyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("details", typeof(docDetailsType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diafile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dotfile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("heading", typeof(docHeadingType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hruler", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("indexentry", typeof(docIndexEntryType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("itemizedlist", typeof(docListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("javadoccode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("javadocliteral", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("language", typeof(docLanguageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mscfile", typeof(docImageFileType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("orderedlist", typeof(docListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("parameterlist", typeof(docParamListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("parblock", typeof(docParBlockType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("preformatted", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("programlisting", typeof(listingType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("simplesect", typeof(docSimpleSectType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("table", typeof(docTableType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(docTitleType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("toclist", typeof(docTocListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("variablelist", typeof(docVariableListType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("verbatim", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xrefsect", typeof(docXRefSectType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType10[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docCopyType {
        
        private docParaType[] paraField;
        
        private docSect1Type[] sect1Field;
        
        private docInternalType internalField;
        
        private string linkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect1Type[] sect1 {
            get {
                return this.sect1Field;
            }
            set {
                this.sect1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docInternalType @internal {
            get {
                return this.internalField;
            }
            set {
                this.internalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect1Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS1Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect2", typeof(docSect2Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docTitleType {
        
        private object[] itemsField;
        
        private ItemsChoiceType4[] itemsElementNameField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docDotMscType {
        
        private object[] itemsField;
        
        private ItemsChoiceType2[] itemsElementNameField;
        
        private string[] textField;
        
        private string nameField;
        
        private string widthField;
        
        private string heightField;
        
        private string captionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docEmojiType {
        
        private string nameField;
        
        private string unicodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string unicode {
            get {
                return this.unicodeField;
            }
            set {
                this.unicodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docFormulaType {
        
        private string idField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docHtmlOnlyType {
        
        private string blockField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docImageType {
        
        private object[] itemsField;
        
        private ItemsChoiceType3[] itemsElementNameField;
        
        private string[] textField;
        
        private DoxImageKind typeField;
        
        private bool typeFieldSpecified;
        
        private string nameField;
        
        private string widthField;
        
        private string heightField;
        
        private string altField;
        
        private DoxBool inlineField;
        
        private bool inlineFieldSpecified;
        
        private string captionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxImageKind type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alt {
            get {
                return this.altField;
            }
            set {
                this.altField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool inline {
            get {
                return this.inlineField;
            }
            set {
                this.inlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inlineSpecified {
            get {
                return this.inlineFieldSpecified;
            }
            set {
                this.inlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docPlantumlType {
        
        private object[] itemsField;
        
        private ItemsChoiceType1[] itemsElementNameField;
        
        private string[] textField;
        
        private string nameField;
        
        private string widthField;
        
        private string heightField;
        
        private string captionField;
        
        private DoxPlantumlEngine engineField;
        
        private bool engineFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxPlantumlEngine engine {
            get {
                return this.engineField;
            }
            set {
                this.engineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool engineSpecified {
            get {
                return this.engineFieldSpecified;
            }
            set {
                this.engineFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docRefTextType {
        
        private object[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private string[] textField;
        
        private string refidField;
        
        private DoxRefKind kindrefField;
        
        private bool kindrefFieldSpecified;
        
        private string externalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxRefKind kindref {
            get {
                return this.kindrefField;
            }
            set {
                this.kindrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindrefSpecified {
            get {
                return this.kindrefFieldSpecified;
            }
            set {
                this.kindrefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docURLLink {
        
        private object[] itemsField;
        
        private ItemsChoiceType11[] itemsElementNameField;
        
        private string[] textField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType11[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType11 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxPlantumlEngine {
        
        /// <remarks/>
        uml,
        
        /// <remarks/>
        bpm,
        
        /// <remarks/>
        wire,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        ditaa,
        
        /// <remarks/>
        salt,
        
        /// <remarks/>
        math,
        
        /// <remarks/>
        latex,
        
        /// <remarks/>
        gantt,
        
        /// <remarks/>
        mindmap,
        
        /// <remarks/>
        wbs,
        
        /// <remarks/>
        yaml,
        
        /// <remarks/>
        creole,
        
        /// <remarks/>
        json,
        
        /// <remarks/>
        flow,
        
        /// <remarks/>
        board,
        
        /// <remarks/>
        git,
        
        /// <remarks/>
        hcl,
        
        /// <remarks/>
        regex,
        
        /// <remarks/>
        ebnf,
        
        /// <remarks/>
        files,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType3 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxImageKind {
        
        /// <remarks/>
        html,
        
        /// <remarks/>
        latex,
        
        /// <remarks/>
        docbook,
        
        /// <remarks/>
        rtf,
        
        /// <remarks/>
        xml,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxBool {
        
        /// <remarks/>
        yes,
        
        /// <remarks/>
        no,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType2 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType4 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS1Type {
        
        private docParaType[] paraField;
        
        private docSect2Type[] sect2Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect2Type[] sect2 {
            get {
                return this.sect2Field;
            }
            set {
                this.sect2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect2Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS2Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect3", typeof(docSect3Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS2Type {
        
        private docParaType[] paraField;
        
        private docSect3Type[] sect3Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect3Type[] sect3 {
            get {
                return this.sect3Field;
            }
            set {
                this.sect3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect3Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS3Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect4", typeof(docSect4Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS3Type {
        
        private docParaType[] paraField;
        
        private docSect4Type[] sect4Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect4Type[] sect4 {
            get {
                return this.sect4Field;
            }
            set {
                this.sect4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect4Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS4Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect5", typeof(docSect5Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS4Type {
        
        private docParaType[] paraField;
        
        private docSect5Type[] sect5Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect5", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect5Type[] sect5 {
            get {
                return this.sect5Field;
            }
            set {
                this.sect5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect5Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS5Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect6", typeof(docSect6Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS5Type {
        
        private docParaType[] paraField;
        
        private docSect6Type[] sect5Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect5", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect6Type[] sect5 {
            get {
                return this.sect5Field;
            }
            set {
                this.sect5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSect6Type {
        
        private docTitleType titleField;
        
        private object[] itemsField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("internal", typeof(docInternalS6Type), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docParaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalS6Type {
        
        private docParaType[] paraField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docInternalType {
        
        private docParaType[] paraField;
        
        private docSect1Type[] sect1Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sect1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSect1Type[] sect1 {
            get {
                return this.sect1Field;
            }
            set {
                this.sect1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docDetailsType {
        
        private docSummaryType summaryField;
        
        private docParaType[] paraField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docSummaryType summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSummaryType {
        
        private object[] itemsField;
        
        private ItemsChoiceType9[] itemsElementNameField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType9[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType9 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docImageFileType {
        
        private object[] itemsField;
        
        private ItemsChoiceType7[] itemsElementNameField;
        
        private string[] textField;
        
        private string nameField;
        
        private string widthField;
        
        private string heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType7[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType7 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docHeadingType {
        
        private object[] itemsField;
        
        private ItemsChoiceType6[] itemsElementNameField;
        
        private string[] textField;
        
        private string levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType6[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType6 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docIndexEntryType {
        
        private string primaryieField;
        
        private string secondaryieField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string primaryie {
            get {
                return this.primaryieField;
            }
            set {
                this.primaryieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string secondaryie {
            get {
                return this.secondaryieField;
            }
            set {
                this.secondaryieField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docListType {
        
        private docListItemType[] listitemField;
        
        private DoxOlType typeField;
        
        private bool typeFieldSpecified;
        
        private string startField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listitem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docListItemType[] listitem {
            get {
                return this.listitemField;
            }
            set {
                this.listitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxOlType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docListItemType {
        
        private docParaType[] paraField;
        
        private DoxCheck overrideField;
        
        private bool overrideFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxCheck @override {
            get {
                return this.overrideField;
            }
            set {
                this.overrideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overrideSpecified {
            get {
                return this.overrideFieldSpecified;
            }
            set {
                this.overrideFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxCheck {
        
        /// <remarks/>
        @checked,
        
        /// <remarks/>
        @unchecked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxOlType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        a,
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        i,
        
        /// <remarks/>
        I,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docLanguageType {
        
        private docParaType[] paraField;
        
        private string langidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string langid {
            get {
                return this.langidField;
            }
            set {
                this.langidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParamListType {
        
        private docParamListItem[] parameteritemField;
        
        private DoxParamListKind kindField;
        
        private bool kindFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameteritem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParamListItem[] parameteritem {
            get {
                return this.parameteritemField;
            }
            set {
                this.parameteritemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxParamListKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParamListItem {
        
        private docParamNameList[] parameternamelistField;
        
        private descriptionType parameterdescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameternamelist", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParamNameList[] parameternamelist {
            get {
                return this.parameternamelistField;
            }
            set {
                this.parameternamelistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType parameterdescription {
            get {
                return this.parameterdescriptionField;
            }
            set {
                this.parameterdescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParamNameList {
        
        private docParamType[] parametertypeField;
        
        private docParamName[] parameternameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parametertype", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParamType[] parametertype {
            get {
                return this.parametertypeField;
            }
            set {
                this.parametertypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parametername", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParamName[] parametername {
            get {
                return this.parameternameField;
            }
            set {
                this.parameternameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParamType {
        
        private refTextType refField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refTextType @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParamName {
        
        private refTextType refField;
        
        private string[] textField;
        
        private DoxParamDir directionField;
        
        private bool directionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public refTextType @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxParamDir direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified {
            get {
                return this.directionFieldSpecified;
            }
            set {
                this.directionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxParamDir {
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        @out,
        
        /// <remarks/>
        inout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxParamListKind {
        
        /// <remarks/>
        param,
        
        /// <remarks/>
        retval,
        
        /// <remarks/>
        exception,
        
        /// <remarks/>
        templateparam,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docParBlockType {
        
        private docParaType[] paraField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listingType {
        
        private codelineType[] codelineField;
        
        private string filenameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("codeline", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public codelineType[] codeline {
            get {
                return this.codelineField;
            }
            set {
                this.codelineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class codelineType {
        
        private highlightType[] highlightField;
        
        private string linenoField;
        
        private string refidField;
        
        private DoxRefKind refkindField;
        
        private bool refkindFieldSpecified;
        
        private DoxBool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("highlight", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public highlightType[] highlight {
            get {
                return this.highlightField;
            }
            set {
                this.highlightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string lineno {
            get {
                return this.linenoField;
            }
            set {
                this.linenoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxRefKind refkind {
            get {
                return this.refkindField;
            }
            set {
                this.refkindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool refkindSpecified {
            get {
                return this.refkindFieldSpecified;
            }
            set {
                this.refkindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class highlightType {
        
        private object[] itemsField;
        
        private string[] textField;
        
        private DoxHighlightClass classField;
        
        private bool classFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(refTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sp", typeof(spType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxHighlightClass @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified {
            get {
                return this.classFieldSpecified;
            }
            set {
                this.classFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spType {
        
        private string valueField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxHighlightClass {
        
        /// <remarks/>
        comment,
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        preprocessor,
        
        /// <remarks/>
        keyword,
        
        /// <remarks/>
        keywordtype,
        
        /// <remarks/>
        keywordflow,
        
        /// <remarks/>
        stringliteral,
        
        /// <remarks/>
        xmlcdata,
        
        /// <remarks/>
        charliteral,
        
        /// <remarks/>
        vhdlkeyword,
        
        /// <remarks/>
        vhdllogic,
        
        /// <remarks/>
        vhdlchar,
        
        /// <remarks/>
        vhdldigit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docSimpleSectType {
        
        private docTitleType titleField;
        
        private docParaType[] paraField;
        
        private DoxSimpleSectKind kindField;
        
        private bool kindFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxSimpleSectKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxSimpleSectKind {
        
        /// <remarks/>
        see,
        
        /// <remarks/>
        @return,
        
        /// <remarks/>
        author,
        
        /// <remarks/>
        authors,
        
        /// <remarks/>
        version,
        
        /// <remarks/>
        since,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        note,
        
        /// <remarks/>
        warning,
        
        /// <remarks/>
        pre,
        
        /// <remarks/>
        post,
        
        /// <remarks/>
        copyright,
        
        /// <remarks/>
        invariant,
        
        /// <remarks/>
        remark,
        
        /// <remarks/>
        attention,
        
        /// <remarks/>
        important,
        
        /// <remarks/>
        par,
        
        /// <remarks/>
        rcs,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docTableType {
        
        private docCaptionType captionField;
        
        private docEntryType[][] rowField;
        
        private string rowsField;
        
        private string colsField;
        
        private string widthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docCaptionType caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", typeof(docEntryType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public docEntryType[][] row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string cols {
            get {
                return this.colsField;
            }
            set {
                this.colsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docCaptionType {
        
        private object[] itemsField;
        
        private ItemsChoiceType5[] itemsElementNameField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType5[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType5 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docEntryType {
        
        private docParaType[] paraField;
        
        private DoxBool theadField;
        
        private bool theadFieldSpecified;
        
        private string colspanField;
        
        private string rowspanField;
        
        private DoxAlign alignField;
        
        private bool alignFieldSpecified;
        
        private DoxVerticalAlign valignField;
        
        private bool valignFieldSpecified;
        
        private string widthField;
        
        private string classField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("para", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docParaType[] para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool thead {
            get {
                return this.theadField;
            }
            set {
                this.theadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool theadSpecified {
            get {
                return this.theadFieldSpecified;
            }
            set {
                this.theadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string colspan {
            get {
                return this.colspanField;
            }
            set {
                this.colspanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string rowspan {
            get {
                return this.rowspanField;
            }
            set {
                this.rowspanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxAlign align {
            get {
                return this.alignField;
            }
            set {
                this.alignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignSpecified {
            get {
                return this.alignFieldSpecified;
            }
            set {
                this.alignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxVerticalAlign valign {
            get {
                return this.valignField;
            }
            set {
                this.valignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valignSpecified {
            get {
                return this.valignFieldSpecified;
            }
            set {
                this.valignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxAlign {
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
        
        /// <remarks/>
        center,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxVerticalAlign {
        
        /// <remarks/>
        bottom,
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        middle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docTocListType {
        
        private docTocItemType[] tocitemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tocitem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTocItemType[] tocitem {
            get {
                return this.tocitemField;
            }
            set {
                this.tocitemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docTocItemType {
        
        private object[] itemsField;
        
        private ItemsChoiceType8[] itemsElementNameField;
        
        private string[] textField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ETH", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OElig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("THORN", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("acute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("agrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alefsym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("alpha", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("anchor", typeof(docAnchorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("and", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aring", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("asymp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("atilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("beta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bold", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("brvbar", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bull", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cap", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ccedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cedil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cent", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("center", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("chi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("circ", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cite", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("clubs", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("computeroutput", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cong", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("copy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("crarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("cup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("curren", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dagger", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("darr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deg", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("del", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("delta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("diams", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("divide", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("docbookonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dot", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ecirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("egrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emoji", typeof(docEmojiType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emphasis", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("empty", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("emsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ensp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("epsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("equiv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eth", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("eumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("euro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("exist", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("fnof", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("forall", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("formula", typeof(docFormulaType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac12", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac14", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frac34", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("frasl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gamma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ge", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("harr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hearts", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("hellip", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("htmlonly", typeof(docHtmlOnlyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("icirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iexcl", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("igrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(docImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("imaginary", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("infin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ins", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("int", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iota", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iquest", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("isin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("iumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("kappa", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lambda", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("laquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("larr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("latexonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ldquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("le", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("linebreak", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lowast", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("loz", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lrm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("macr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("manonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mdash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("micro", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("middot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("minus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("msc", typeof(docDotMscType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nabla", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ndash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ne", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ni", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nonbreakablespace", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("not", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("notin", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nsub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ntilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("nu", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ocirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oelig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ograve", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oline", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omega", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("omicron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oplus", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("or", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ordm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oslash", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("otimes", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("oumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("para", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("part", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("permil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("perp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("piv", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plantuml", typeof(docPlantumlType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("plusmn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pound", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prime", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prod", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("prop", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("psi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("radic", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rang", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("raquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rceil", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rdquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("real", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ref", typeof(docRefTextType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("registered", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rfloor", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rho", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rlm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsaquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rsquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rtfonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("s", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sbquo", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("scaron", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sdot", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sect", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shy", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigma", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sigmaf", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sim", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("small", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("spades", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("strike", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sub", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sube", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sum", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup1", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup2", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sup3", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("supe", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("superscript", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("szlig", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tau", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("there4", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("theta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thetasym", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thinsp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("thorn", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tilde", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("times", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("tm", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("trademark", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uArr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uarr", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ucirc", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ugrave", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ulink", typeof(docURLLink), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("umlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("underline", typeof(docMarkupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsih", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("upsilon", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("weierp", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xi", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmlonly", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yacute", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yen", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("yumlaut", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zeta", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("zwnj", typeof(docEmptyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType8[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType8 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docVariableListType {
        
        private docVarListEntryType[] varlistentryField;
        
        private docListItemType[] listitemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("varlistentry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docVarListEntryType[] varlistentry {
            get {
                return this.varlistentryField;
            }
            set {
                this.varlistentryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listitem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docListItemType[] listitem {
            get {
                return this.listitemField;
            }
            set {
                this.listitemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docVarListEntryType {
        
        private docTitleType termField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docTitleType term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class docXRefSectType {
        
        private string[] xreftitleField;
        
        private descriptionType xrefdescriptionField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xreftitle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] xreftitle {
            get {
                return this.xreftitleField;
            }
            set {
                this.xreftitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType xrefdescription {
            get {
                return this.xrefdescriptionField;
            }
            set {
                this.xrefdescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType10 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        blockquote,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        copydoc,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        details,
        
        /// <remarks/>
        diafile,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        dotfile,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        heading,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        hruler,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        indexentry,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        itemizedlist,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        javadoccode,
        
        /// <remarks/>
        javadocliteral,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        language,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mscfile,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        orderedlist,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        parameterlist,
        
        /// <remarks/>
        parblock,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        preformatted,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        programlisting,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        simplesect,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        table,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        title,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        toclist,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        variablelist,
        
        /// <remarks/>
        verbatim,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        xrefsect,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType12 {
        
        /// <remarks/>
        AElig,
        
        /// <remarks/>
        Aacute,
        
        /// <remarks/>
        Acirc,
        
        /// <remarks/>
        Agrave,
        
        /// <remarks/>
        Alpha,
        
        /// <remarks/>
        Aring,
        
        /// <remarks/>
        Atilde,
        
        /// <remarks/>
        Aumlaut,
        
        /// <remarks/>
        Beta,
        
        /// <remarks/>
        Ccedil,
        
        /// <remarks/>
        Chi,
        
        /// <remarks/>
        Dagger,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        ETH,
        
        /// <remarks/>
        Eacute,
        
        /// <remarks/>
        Ecirc,
        
        /// <remarks/>
        Egrave,
        
        /// <remarks/>
        Epsilon,
        
        /// <remarks/>
        Eta,
        
        /// <remarks/>
        Eumlaut,
        
        /// <remarks/>
        Gamma,
        
        /// <remarks/>
        Iacute,
        
        /// <remarks/>
        Icirc,
        
        /// <remarks/>
        Igrave,
        
        /// <remarks/>
        Iota,
        
        /// <remarks/>
        Iumlaut,
        
        /// <remarks/>
        Kappa,
        
        /// <remarks/>
        Lambda,
        
        /// <remarks/>
        Mu,
        
        /// <remarks/>
        Ntilde,
        
        /// <remarks/>
        Nu,
        
        /// <remarks/>
        OElig,
        
        /// <remarks/>
        Oacute,
        
        /// <remarks/>
        Ocirc,
        
        /// <remarks/>
        Ograve,
        
        /// <remarks/>
        Omega,
        
        /// <remarks/>
        Omicron,
        
        /// <remarks/>
        Oslash,
        
        /// <remarks/>
        Otilde,
        
        /// <remarks/>
        Oumlaut,
        
        /// <remarks/>
        Phi,
        
        /// <remarks/>
        Pi,
        
        /// <remarks/>
        Prime,
        
        /// <remarks/>
        Psi,
        
        /// <remarks/>
        Rho,
        
        /// <remarks/>
        Scaron,
        
        /// <remarks/>
        Sigma,
        
        /// <remarks/>
        THORN,
        
        /// <remarks/>
        Tau,
        
        /// <remarks/>
        Theta,
        
        /// <remarks/>
        Uacute,
        
        /// <remarks/>
        Ucirc,
        
        /// <remarks/>
        Ugrave,
        
        /// <remarks/>
        Upsilon,
        
        /// <remarks/>
        Uumlaut,
        
        /// <remarks/>
        Xi,
        
        /// <remarks/>
        Yacute,
        
        /// <remarks/>
        Yumlaut,
        
        /// <remarks/>
        Zeta,
        
        /// <remarks/>
        aacute,
        
        /// <remarks/>
        acirc,
        
        /// <remarks/>
        acute,
        
        /// <remarks/>
        aelig,
        
        /// <remarks/>
        agrave,
        
        /// <remarks/>
        alefsym,
        
        /// <remarks/>
        alpha,
        
        /// <remarks/>
        anchor,
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        aring,
        
        /// <remarks/>
        asymp,
        
        /// <remarks/>
        atilde,
        
        /// <remarks/>
        aumlaut,
        
        /// <remarks/>
        bdquo,
        
        /// <remarks/>
        beta,
        
        /// <remarks/>
        blockquote,
        
        /// <remarks/>
        bold,
        
        /// <remarks/>
        brvbar,
        
        /// <remarks/>
        bull,
        
        /// <remarks/>
        cap,
        
        /// <remarks/>
        ccedil,
        
        /// <remarks/>
        cedil,
        
        /// <remarks/>
        cent,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        circ,
        
        /// <remarks/>
        cite,
        
        /// <remarks/>
        clubs,
        
        /// <remarks/>
        computeroutput,
        
        /// <remarks/>
        cong,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        copydoc,
        
        /// <remarks/>
        crarr,
        
        /// <remarks/>
        cup,
        
        /// <remarks/>
        curren,
        
        /// <remarks/>
        dArr,
        
        /// <remarks/>
        dagger,
        
        /// <remarks/>
        darr,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        delta,
        
        /// <remarks/>
        details,
        
        /// <remarks/>
        diafile,
        
        /// <remarks/>
        diams,
        
        /// <remarks/>
        divide,
        
        /// <remarks/>
        docbookonly,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        dotfile,
        
        /// <remarks/>
        eacute,
        
        /// <remarks/>
        ecirc,
        
        /// <remarks/>
        egrave,
        
        /// <remarks/>
        emoji,
        
        /// <remarks/>
        emphasis,
        
        /// <remarks/>
        empty,
        
        /// <remarks/>
        emsp,
        
        /// <remarks/>
        ensp,
        
        /// <remarks/>
        epsilon,
        
        /// <remarks/>
        equiv,
        
        /// <remarks/>
        eta,
        
        /// <remarks/>
        eth,
        
        /// <remarks/>
        eumlaut,
        
        /// <remarks/>
        euro,
        
        /// <remarks/>
        exist,
        
        /// <remarks/>
        fnof,
        
        /// <remarks/>
        forall,
        
        /// <remarks/>
        formula,
        
        /// <remarks/>
        frac12,
        
        /// <remarks/>
        frac14,
        
        /// <remarks/>
        frac34,
        
        /// <remarks/>
        frasl,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        hArr,
        
        /// <remarks/>
        harr,
        
        /// <remarks/>
        heading,
        
        /// <remarks/>
        hearts,
        
        /// <remarks/>
        hellip,
        
        /// <remarks/>
        hruler,
        
        /// <remarks/>
        htmlonly,
        
        /// <remarks/>
        iacute,
        
        /// <remarks/>
        icirc,
        
        /// <remarks/>
        iexcl,
        
        /// <remarks/>
        igrave,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        imaginary,
        
        /// <remarks/>
        indexentry,
        
        /// <remarks/>
        infin,
        
        /// <remarks/>
        ins,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        iota,
        
        /// <remarks/>
        iquest,
        
        /// <remarks/>
        isin,
        
        /// <remarks/>
        itemizedlist,
        
        /// <remarks/>
        iumlaut,
        
        /// <remarks/>
        javadoccode,
        
        /// <remarks/>
        javadocliteral,
        
        /// <remarks/>
        kappa,
        
        /// <remarks/>
        lArr,
        
        /// <remarks/>
        lambda,
        
        /// <remarks/>
        lang,
        
        /// <remarks/>
        language,
        
        /// <remarks/>
        laquo,
        
        /// <remarks/>
        larr,
        
        /// <remarks/>
        latexonly,
        
        /// <remarks/>
        lceil,
        
        /// <remarks/>
        ldquo,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lfloor,
        
        /// <remarks/>
        linebreak,
        
        /// <remarks/>
        lowast,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        lrm,
        
        /// <remarks/>
        lsaquo,
        
        /// <remarks/>
        lsquo,
        
        /// <remarks/>
        macr,
        
        /// <remarks/>
        manonly,
        
        /// <remarks/>
        mdash,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        middot,
        
        /// <remarks/>
        minus,
        
        /// <remarks/>
        msc,
        
        /// <remarks/>
        mscfile,
        
        /// <remarks/>
        mu,
        
        /// <remarks/>
        nabla,
        
        /// <remarks/>
        ndash,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        ni,
        
        /// <remarks/>
        nonbreakablespace,
        
        /// <remarks/>
        not,
        
        /// <remarks/>
        notin,
        
        /// <remarks/>
        nsub,
        
        /// <remarks/>
        ntilde,
        
        /// <remarks/>
        nu,
        
        /// <remarks/>
        oacute,
        
        /// <remarks/>
        ocirc,
        
        /// <remarks/>
        oelig,
        
        /// <remarks/>
        ograve,
        
        /// <remarks/>
        oline,
        
        /// <remarks/>
        omega,
        
        /// <remarks/>
        omicron,
        
        /// <remarks/>
        oplus,
        
        /// <remarks/>
        or,
        
        /// <remarks/>
        orderedlist,
        
        /// <remarks/>
        ordf,
        
        /// <remarks/>
        ordm,
        
        /// <remarks/>
        oslash,
        
        /// <remarks/>
        otilde,
        
        /// <remarks/>
        otimes,
        
        /// <remarks/>
        oumlaut,
        
        /// <remarks/>
        para,
        
        /// <remarks/>
        parameterlist,
        
        /// <remarks/>
        parblock,
        
        /// <remarks/>
        part,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        perp,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        pi,
        
        /// <remarks/>
        piv,
        
        /// <remarks/>
        plantuml,
        
        /// <remarks/>
        plusmn,
        
        /// <remarks/>
        pound,
        
        /// <remarks/>
        preformatted,
        
        /// <remarks/>
        prime,
        
        /// <remarks/>
        prod,
        
        /// <remarks/>
        programlisting,
        
        /// <remarks/>
        prop,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        rArr,
        
        /// <remarks/>
        radic,
        
        /// <remarks/>
        rang,
        
        /// <remarks/>
        raquo,
        
        /// <remarks/>
        rarr,
        
        /// <remarks/>
        rceil,
        
        /// <remarks/>
        rdquo,
        
        /// <remarks/>
        real,
        
        /// <remarks/>
        @ref,
        
        /// <remarks/>
        registered,
        
        /// <remarks/>
        rfloor,
        
        /// <remarks/>
        rho,
        
        /// <remarks/>
        rlm,
        
        /// <remarks/>
        rsaquo,
        
        /// <remarks/>
        rsquo,
        
        /// <remarks/>
        rtfonly,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        sbquo,
        
        /// <remarks/>
        scaron,
        
        /// <remarks/>
        sdot,
        
        /// <remarks/>
        sect,
        
        /// <remarks/>
        shy,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        sigmaf,
        
        /// <remarks/>
        sim,
        
        /// <remarks/>
        simplesect,
        
        /// <remarks/>
        small,
        
        /// <remarks/>
        spades,
        
        /// <remarks/>
        strike,
        
        /// <remarks/>
        sub,
        
        /// <remarks/>
        sube,
        
        /// <remarks/>
        subscript,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        sup,
        
        /// <remarks/>
        sup1,
        
        /// <remarks/>
        sup2,
        
        /// <remarks/>
        sup3,
        
        /// <remarks/>
        supe,
        
        /// <remarks/>
        superscript,
        
        /// <remarks/>
        szlig,
        
        /// <remarks/>
        table,
        
        /// <remarks/>
        tau,
        
        /// <remarks/>
        there4,
        
        /// <remarks/>
        theta,
        
        /// <remarks/>
        thetasym,
        
        /// <remarks/>
        thinsp,
        
        /// <remarks/>
        thorn,
        
        /// <remarks/>
        tilde,
        
        /// <remarks/>
        times,
        
        /// <remarks/>
        title,
        
        /// <remarks/>
        tm,
        
        /// <remarks/>
        toclist,
        
        /// <remarks/>
        trademark,
        
        /// <remarks/>
        uArr,
        
        /// <remarks/>
        uacute,
        
        /// <remarks/>
        uarr,
        
        /// <remarks/>
        ucirc,
        
        /// <remarks/>
        ugrave,
        
        /// <remarks/>
        ulink,
        
        /// <remarks/>
        umlaut,
        
        /// <remarks/>
        underline,
        
        /// <remarks/>
        upsih,
        
        /// <remarks/>
        upsilon,
        
        /// <remarks/>
        uumlaut,
        
        /// <remarks/>
        variablelist,
        
        /// <remarks/>
        verbatim,
        
        /// <remarks/>
        weierp,
        
        /// <remarks/>
        xi,
        
        /// <remarks/>
        xmlonly,
        
        /// <remarks/>
        xrefsect,
        
        /// <remarks/>
        yacute,
        
        /// <remarks/>
        yen,
        
        /// <remarks/>
        yumlaut,
        
        /// <remarks/>
        zeta,
        
        /// <remarks/>
        zwj,
        
        /// <remarks/>
        zwnj,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reimplementType {
        
        private string refidField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class memberdefType {
        
        private paramType[] templateparamlistField;
        
        private linkedTextType typeField;
        
        private string definitionField;
        
        private string argsstringField;
        
        private string nameField;
        
        private string qualifiednameField;
        
        private string readField;
        
        private string writeField;
        
        private string bitfieldField;
        
        private reimplementType[] reimplementsField;
        
        private reimplementType[] reimplementedbyField;
        
        private string[] qualifierField;
        
        private paramType[] paramField;
        
        private enumvalueType[] enumvalueField;
        
        private linkedTextType requiresclauseField;
        
        private linkedTextType initializerField;
        
        private linkedTextType exceptionsField;
        
        private descriptionType briefdescriptionField;
        
        private descriptionType detaileddescriptionField;
        
        private descriptionType inbodydescriptionField;
        
        private locationType locationField;
        
        private referenceType[] referencesField;
        
        private referenceType[] referencedbyField;
        
        private DoxMemberKind kindField;
        
        private bool kindFieldSpecified;
        
        private string idField;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        private DoxBool staticField;
        
        private bool staticFieldSpecified;
        
        private DoxBool externField;
        
        private bool externFieldSpecified;
        
        private DoxBool strongField;
        
        private bool strongFieldSpecified;
        
        private DoxBool constField;
        
        private bool constFieldSpecified;
        
        private DoxBool explicitField;
        
        private bool explicitFieldSpecified;
        
        private DoxBool inlineField;
        
        private bool inlineFieldSpecified;
        
        private DoxRefQualifierKind refqualField;
        
        private bool refqualFieldSpecified;
        
        private DoxVirtualKind virtField;
        
        private bool virtFieldSpecified;
        
        private DoxBool volatileField;
        
        private bool volatileFieldSpecified;
        
        private DoxBool mutableField;
        
        private bool mutableFieldSpecified;
        
        private DoxBool noexceptField;
        
        private bool noexceptFieldSpecified;
        
        private string noexceptexpressionField;
        
        private DoxBool nodiscardField;
        
        private bool nodiscardFieldSpecified;
        
        private DoxBool constexprField;
        
        private bool constexprFieldSpecified;
        
        private DoxBool constevalField;
        
        private bool constevalFieldSpecified;
        
        private DoxBool constinitField;
        
        private bool constinitFieldSpecified;
        
        private DoxBool readableField;
        
        private bool readableFieldSpecified;
        
        private DoxBool writableField;
        
        private bool writableFieldSpecified;
        
        private DoxBool initonlyField;
        
        private bool initonlyFieldSpecified;
        
        private DoxBool settableField;
        
        private bool settableFieldSpecified;
        
        private DoxBool privatesettableField;
        
        private bool privatesettableFieldSpecified;
        
        private DoxBool protectedsettableField;
        
        private bool protectedsettableFieldSpecified;
        
        private DoxBool gettableField;
        
        private bool gettableFieldSpecified;
        
        private DoxBool privategettableField;
        
        private bool privategettableFieldSpecified;
        
        private DoxBool protectedgettableField;
        
        private bool protectedgettableFieldSpecified;
        
        private DoxBool finalField;
        
        private bool finalFieldSpecified;
        
        private DoxBool sealedField;
        
        private bool sealedFieldSpecified;
        
        private DoxBool newField;
        
        private bool newFieldSpecified;
        
        private DoxBool addField;
        
        private bool addFieldSpecified;
        
        private DoxBool removeField;
        
        private bool removeFieldSpecified;
        
        private DoxBool raiseField;
        
        private bool raiseFieldSpecified;
        
        private DoxBool optionalField;
        
        private bool optionalFieldSpecified;
        
        private DoxBool requiredField;
        
        private bool requiredFieldSpecified;
        
        private DoxAccessor accessorField;
        
        private bool accessorFieldSpecified;
        
        private DoxBool attributeField;
        
        private bool attributeFieldSpecified;
        
        private DoxBool propertyField;
        
        private bool propertyFieldSpecified;
        
        private DoxBool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private DoxBool boundField;
        
        private bool boundFieldSpecified;
        
        private DoxBool removableField;
        
        private bool removableFieldSpecified;
        
        private DoxBool constrainedField;
        
        private bool constrainedFieldSpecified;
        
        private DoxBool transientField;
        
        private bool transientFieldSpecified;
        
        private DoxBool maybevoidField;
        
        private bool maybevoidFieldSpecified;
        
        private DoxBool maybedefaultField;
        
        private bool maybedefaultFieldSpecified;
        
        private DoxBool maybeambiguousField;
        
        private bool maybeambiguousFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public paramType[] templateparamlist {
            get {
                return this.templateparamlistField;
            }
            set {
                this.templateparamlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string argsstring {
            get {
                return this.argsstringField;
            }
            set {
                this.argsstringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string qualifiedname {
            get {
                return this.qualifiednameField;
            }
            set {
                this.qualifiednameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string write {
            get {
                return this.writeField;
            }
            set {
                this.writeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bitfield {
            get {
                return this.bitfieldField;
            }
            set {
                this.bitfieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reimplements", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reimplementType[] reimplements {
            get {
                return this.reimplementsField;
            }
            set {
                this.reimplementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reimplementedby", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reimplementType[] reimplementedby {
            get {
                return this.reimplementedbyField;
            }
            set {
                this.reimplementedbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("qualifier", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public paramType[] param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("enumvalue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public enumvalueType[] enumvalue {
            get {
                return this.enumvalueField;
            }
            set {
                this.enumvalueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType requiresclause {
            get {
                return this.requiresclauseField;
            }
            set {
                this.requiresclauseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType initializer {
            get {
                return this.initializerField;
            }
            set {
                this.initializerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType exceptions {
            get {
                return this.exceptionsField;
            }
            set {
                this.exceptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType briefdescription {
            get {
                return this.briefdescriptionField;
            }
            set {
                this.briefdescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType detaileddescription {
            get {
                return this.detaileddescriptionField;
            }
            set {
                this.detaileddescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType inbodydescription {
            get {
                return this.inbodydescriptionField;
            }
            set {
                this.inbodydescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public locationType location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("references", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public referenceType[] references {
            get {
                return this.referencesField;
            }
            set {
                this.referencesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("referencedby", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public referenceType[] referencedby {
            get {
                return this.referencedbyField;
            }
            set {
                this.referencedbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxMemberKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @static {
            get {
                return this.staticField;
            }
            set {
                this.staticField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool staticSpecified {
            get {
                return this.staticFieldSpecified;
            }
            set {
                this.staticFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @extern {
            get {
                return this.externField;
            }
            set {
                this.externField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externSpecified {
            get {
                return this.externFieldSpecified;
            }
            set {
                this.externFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool strong {
            get {
                return this.strongField;
            }
            set {
                this.strongField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool strongSpecified {
            get {
                return this.strongFieldSpecified;
            }
            set {
                this.strongFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @const {
            get {
                return this.constField;
            }
            set {
                this.constField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constSpecified {
            get {
                return this.constFieldSpecified;
            }
            set {
                this.constFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @explicit {
            get {
                return this.explicitField;
            }
            set {
                this.explicitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool explicitSpecified {
            get {
                return this.explicitFieldSpecified;
            }
            set {
                this.explicitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool inline {
            get {
                return this.inlineField;
            }
            set {
                this.inlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inlineSpecified {
            get {
                return this.inlineFieldSpecified;
            }
            set {
                this.inlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxRefQualifierKind refqual {
            get {
                return this.refqualField;
            }
            set {
                this.refqualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool refqualSpecified {
            get {
                return this.refqualFieldSpecified;
            }
            set {
                this.refqualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxVirtualKind virt {
            get {
                return this.virtField;
            }
            set {
                this.virtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool virtSpecified {
            get {
                return this.virtFieldSpecified;
            }
            set {
                this.virtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @volatile {
            get {
                return this.volatileField;
            }
            set {
                this.volatileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool volatileSpecified {
            get {
                return this.volatileFieldSpecified;
            }
            set {
                this.volatileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool mutable {
            get {
                return this.mutableField;
            }
            set {
                this.mutableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mutableSpecified {
            get {
                return this.mutableFieldSpecified;
            }
            set {
                this.mutableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool noexcept {
            get {
                return this.noexceptField;
            }
            set {
                this.noexceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool noexceptSpecified {
            get {
                return this.noexceptFieldSpecified;
            }
            set {
                this.noexceptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string noexceptexpression {
            get {
                return this.noexceptexpressionField;
            }
            set {
                this.noexceptexpressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool nodiscard {
            get {
                return this.nodiscardField;
            }
            set {
                this.nodiscardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nodiscardSpecified {
            get {
                return this.nodiscardFieldSpecified;
            }
            set {
                this.nodiscardFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool constexpr {
            get {
                return this.constexprField;
            }
            set {
                this.constexprField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constexprSpecified {
            get {
                return this.constexprFieldSpecified;
            }
            set {
                this.constexprFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool consteval {
            get {
                return this.constevalField;
            }
            set {
                this.constevalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constevalSpecified {
            get {
                return this.constevalFieldSpecified;
            }
            set {
                this.constevalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool constinit {
            get {
                return this.constinitField;
            }
            set {
                this.constinitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constinitSpecified {
            get {
                return this.constinitFieldSpecified;
            }
            set {
                this.constinitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool readable {
            get {
                return this.readableField;
            }
            set {
                this.readableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readableSpecified {
            get {
                return this.readableFieldSpecified;
            }
            set {
                this.readableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool writable {
            get {
                return this.writableField;
            }
            set {
                this.writableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool writableSpecified {
            get {
                return this.writableFieldSpecified;
            }
            set {
                this.writableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool initonly {
            get {
                return this.initonlyField;
            }
            set {
                this.initonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool initonlySpecified {
            get {
                return this.initonlyFieldSpecified;
            }
            set {
                this.initonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool settable {
            get {
                return this.settableField;
            }
            set {
                this.settableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool settableSpecified {
            get {
                return this.settableFieldSpecified;
            }
            set {
                this.settableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool privatesettable {
            get {
                return this.privatesettableField;
            }
            set {
                this.privatesettableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool privatesettableSpecified {
            get {
                return this.privatesettableFieldSpecified;
            }
            set {
                this.privatesettableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool protectedsettable {
            get {
                return this.protectedsettableField;
            }
            set {
                this.protectedsettableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protectedsettableSpecified {
            get {
                return this.protectedsettableFieldSpecified;
            }
            set {
                this.protectedsettableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool gettable {
            get {
                return this.gettableField;
            }
            set {
                this.gettableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gettableSpecified {
            get {
                return this.gettableFieldSpecified;
            }
            set {
                this.gettableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool privategettable {
            get {
                return this.privategettableField;
            }
            set {
                this.privategettableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool privategettableSpecified {
            get {
                return this.privategettableFieldSpecified;
            }
            set {
                this.privategettableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool protectedgettable {
            get {
                return this.protectedgettableField;
            }
            set {
                this.protectedgettableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protectedgettableSpecified {
            get {
                return this.protectedgettableFieldSpecified;
            }
            set {
                this.protectedgettableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool final {
            get {
                return this.finalField;
            }
            set {
                this.finalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool finalSpecified {
            get {
                return this.finalFieldSpecified;
            }
            set {
                this.finalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @sealed {
            get {
                return this.sealedField;
            }
            set {
                this.sealedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sealedSpecified {
            get {
                return this.sealedFieldSpecified;
            }
            set {
                this.sealedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @new {
            get {
                return this.newField;
            }
            set {
                this.newField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newSpecified {
            get {
                return this.newFieldSpecified;
            }
            set {
                this.newFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool add {
            get {
                return this.addField;
            }
            set {
                this.addField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool addSpecified {
            get {
                return this.addFieldSpecified;
            }
            set {
                this.addFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool remove {
            get {
                return this.removeField;
            }
            set {
                this.removeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removeSpecified {
            get {
                return this.removeFieldSpecified;
            }
            set {
                this.removeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool raise {
            get {
                return this.raiseField;
            }
            set {
                this.raiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool raiseSpecified {
            get {
                return this.raiseFieldSpecified;
            }
            set {
                this.raiseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool optional {
            get {
                return this.optionalField;
            }
            set {
                this.optionalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool optionalSpecified {
            get {
                return this.optionalFieldSpecified;
            }
            set {
                this.optionalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredSpecified {
            get {
                return this.requiredFieldSpecified;
            }
            set {
                this.requiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxAccessor accessor {
            get {
                return this.accessorField;
            }
            set {
                this.accessorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accessorSpecified {
            get {
                return this.accessorFieldSpecified;
            }
            set {
                this.accessorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attributeSpecified {
            get {
                return this.attributeFieldSpecified;
            }
            set {
                this.attributeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool propertySpecified {
            get {
                return this.propertyFieldSpecified;
            }
            set {
                this.propertyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool bound {
            get {
                return this.boundField;
            }
            set {
                this.boundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool boundSpecified {
            get {
                return this.boundFieldSpecified;
            }
            set {
                this.boundFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool removable {
            get {
                return this.removableField;
            }
            set {
                this.removableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removableSpecified {
            get {
                return this.removableFieldSpecified;
            }
            set {
                this.removableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool constrained {
            get {
                return this.constrainedField;
            }
            set {
                this.constrainedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constrainedSpecified {
            get {
                return this.constrainedFieldSpecified;
            }
            set {
                this.constrainedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool transient {
            get {
                return this.transientField;
            }
            set {
                this.transientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transientSpecified {
            get {
                return this.transientFieldSpecified;
            }
            set {
                this.transientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool maybevoid {
            get {
                return this.maybevoidField;
            }
            set {
                this.maybevoidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maybevoidSpecified {
            get {
                return this.maybevoidFieldSpecified;
            }
            set {
                this.maybevoidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool maybedefault {
            get {
                return this.maybedefaultField;
            }
            set {
                this.maybedefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maybedefaultSpecified {
            get {
                return this.maybedefaultFieldSpecified;
            }
            set {
                this.maybedefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool maybeambiguous {
            get {
                return this.maybeambiguousField;
            }
            set {
                this.maybeambiguousField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maybeambiguousSpecified {
            get {
                return this.maybeambiguousFieldSpecified;
            }
            set {
                this.maybeambiguousFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class paramType {
        
        private string attributesField;
        
        private linkedTextType typeField;
        
        private string declnameField;
        
        private string defnameField;
        
        private string arrayField;
        
        private linkedTextType defvalField;
        
        private linkedTextType typeconstraintField;
        
        private descriptionType briefdescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string declname {
            get {
                return this.declnameField;
            }
            set {
                this.declnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defname {
            get {
                return this.defnameField;
            }
            set {
                this.defnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string array {
            get {
                return this.arrayField;
            }
            set {
                this.arrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType defval {
            get {
                return this.defvalField;
            }
            set {
                this.defvalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkedTextType typeconstraint {
            get {
                return this.typeconstraintField;
            }
            set {
                this.typeconstraintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType briefdescription {
            get {
                return this.briefdescriptionField;
            }
            set {
                this.briefdescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxMemberKind {
        
        /// <remarks/>
        define,
        
        /// <remarks/>
        property,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        variable,
        
        /// <remarks/>
        typedef,
        
        /// <remarks/>
        @enum,
        
        /// <remarks/>
        function,
        
        /// <remarks/>
        signal,
        
        /// <remarks/>
        prototype,
        
        /// <remarks/>
        friend,
        
        /// <remarks/>
        dcop,
        
        /// <remarks/>
        slot,
        
        /// <remarks/>
        @interface,
        
        /// <remarks/>
        service,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxRefQualifierKind {
        
        /// <remarks/>
        lvalue,
        
        /// <remarks/>
        rvalue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxAccessor {
        
        /// <remarks/>
        retain,
        
        /// <remarks/>
        copy,
        
        /// <remarks/>
        assign,
        
        /// <remarks/>
        weak,
        
        /// <remarks/>
        strong,
        
        /// <remarks/>
        unretained,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sectiondefType {
        
        private string headerField;
        
        private descriptionType descriptionField;
        
        private memberdefType[] memberdefField;
        
        private MemberType[] memberField;
        
        private DoxSectionKind kindField;
        
        private bool kindFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public descriptionType description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("memberdef", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public memberdefType[] memberdef {
            get {
                return this.memberdefField;
            }
            set {
                this.memberdefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MemberType[] member {
            get {
                return this.memberField;
            }
            set {
                this.memberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxSectionKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxSectionKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("user-defined")]
        userdefined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-type")]
        publictype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-func")]
        publicfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-attrib")]
        publicattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-slot")]
        publicslot,
        
        /// <remarks/>
        signal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dcop-func")]
        dcopfunc,
        
        /// <remarks/>
        property,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-static-func")]
        publicstaticfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-static-attrib")]
        publicstaticattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-type")]
        protectedtype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-func")]
        protectedfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-attrib")]
        protectedattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-slot")]
        protectedslot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-static-func")]
        protectedstaticfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-static-attrib")]
        protectedstaticattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("package-type")]
        packagetype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("package-func")]
        packagefunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("package-attrib")]
        packageattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("package-static-func")]
        packagestaticfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("package-static-attrib")]
        packagestaticattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-type")]
        privatetype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-func")]
        privatefunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-attrib")]
        privateattrib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-slot")]
        privateslot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-static-func")]
        privatestaticfunc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-static-attrib")]
        privatestaticattrib,
        
        /// <remarks/>
        friend,
        
        /// <remarks/>
        related,
        
        /// <remarks/>
        define,
        
        /// <remarks/>
        prototype,
        
        /// <remarks/>
        typedef,
        
        /// <remarks/>
        @enum,
        
        /// <remarks/>
        func,
        
        /// <remarks/>
        var,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refType {
        
        private string refidField;
        
        private DoxProtectionKind protField;
        
        private bool protFieldSpecified;
        
        private DoxBool inlineField;
        
        private bool inlineFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxProtectionKind prot {
            get {
                return this.protField;
            }
            set {
                this.protField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protSpecified {
            get {
                return this.protFieldSpecified;
            }
            set {
                this.protFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool inline {
            get {
                return this.inlineField;
            }
            set {
                this.inlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inlineSpecified {
            get {
                return this.inlineFieldSpecified;
            }
            set {
                this.inlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class childnodeType {
        
        private string[] edgelabelField;
        
        private string refidField;
        
        private DoxGraphRelation relationField;
        
        private bool relationFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("edgelabel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] edgelabel {
            get {
                return this.edgelabelField;
            }
            set {
                this.edgelabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxGraphRelation relation {
            get {
                return this.relationField;
            }
            set {
                this.relationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool relationSpecified {
            get {
                return this.relationFieldSpecified;
            }
            set {
                this.relationFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxGraphRelation {
        
        /// <remarks/>
        include,
        
        /// <remarks/>
        usage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("template-instance")]
        templateinstance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("public-inheritance")]
        publicinheritance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protected-inheritance")]
        protectedinheritance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("private-inheritance")]
        privateinheritance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("type-constraint")]
        typeconstraint,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class linkType {
        
        private string refidField;
        
        private string externalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nodeType {
        
        private string labelField;
        
        private linkType linkField;
        
        private childnodeType[] childnodeField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public linkType link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("childnode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public childnodeType[] childnode {
            get {
                return this.childnodeField;
            }
            set {
                this.childnodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class incType {
        
        private string refidField;
        
        private DoxBool localField;
        
        private bool localFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refid {
            get {
                return this.refidField;
            }
            set {
                this.refidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DoxBool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxCompoundKind {
        
        /// <remarks/>
        @class,
        
        /// <remarks/>
        @struct,
        
        /// <remarks/>
        union,
        
        /// <remarks/>
        @interface,
        
        /// <remarks/>
        protocol,
        
        /// <remarks/>
        category,
        
        /// <remarks/>
        exception,
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        singleton,
        
        /// <remarks/>
        module,
        
        /// <remarks/>
        type,
        
        /// <remarks/>
        file,
        
        /// <remarks/>
        @namespace,
        
        /// <remarks/>
        group,
        
        /// <remarks/>
        page,
        
        /// <remarks/>
        example,
        
        /// <remarks/>
        dir,
        
        /// <remarks/>
        concept,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DoxLanguage {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        IDL,
        
        /// <remarks/>
        Java,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C#")]
        C,
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        PHP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Objective-C")]
        ObjectiveC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C++")]
        C1,
        
        /// <remarks/>
        JavaScript,
        
        /// <remarks/>
        Python,
        
        /// <remarks/>
        Fortran,
        
        /// <remarks/>
        VHDL,
        
        /// <remarks/>
        XML,
        
        /// <remarks/>
        SQL,
        
        /// <remarks/>
        Markdown,
        
        /// <remarks/>
        Slice,
        
        /// <remarks/>
        Lex,
    }
}
